Homework 3

Focus:
Object-oriented programming
Data Hiding
Encapsulation
Delegation
Problem:
We will expand our Warrior a little. Each Warrior will have a weapon. He is "born" with it, i.e. the weapon is created together with the warrior. 
It can only be accessed by him. It provides him with his strength. In battle, weapons lose their edge and weaken. When a Warrior's weapon loses 
all of its strength, the Warrior himself dies.

Implementation
What are the types of things in the problem? We will need a class for each type.
What do the things / types do? These "behaviors" should be represented as methods.
Weapons have both a name and a strength. The weapon is created together with the Warrior and cannot be accessed by anyone else.
The input file needs to change a little. When a Warrior is created, instead of simply specifying his name and strength, the command will specify 
the Warrior's name as well as his Weapon's name and its strength.
The Status report will also be modified to show the name of the Warrior's Weapon.
No one can access a warrior's weapon accept the warrior himself. But the weapon is what actually holds the warrior's strength. How does this effect 
the programming? Any time the code needs to know or change the warrior's strength, the warrior then asks the weapon what the strength is or tells 
the weapon that the strength needs to be changed. This represents the idea of delegation. We will see this concept frequently, where one object 
requests that another object do some task.